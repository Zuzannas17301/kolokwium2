// <auto-generated />
using System;
using APBDKol2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace APBDKol2.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    partial class MusicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("APBDKol2.Models.Artist", b =>
                {
                    b.Property<int>("IdArtist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("IdArtist");

                    b.ToTable("Artist");

                    b.HasData(
                        new
                        {
                            IdArtist = 1,
                            NickName = "Bob"
                        },
                        new
                        {
                            IdArtist = 2,
                            NickName = "Hannah"
                        });
                });

            modelBuilder.Entity("APBDKol2.Models.ArtistEvent", b =>
                {
                    b.Property<int>("IdArtist")
                        .HasColumnType("int");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.Property<DateTime>("PerformanceDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdArtist");

                    b.HasIndex("IdEvent");

                    b.ToTable("ArtistEvent");

                    b.HasData(
                        new
                        {
                            IdArtist = 1,
                            IdEvent = 1,
                            PerformanceDate = new DateTime(2019, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdArtist = 2,
                            IdEvent = 2,
                            PerformanceDate = new DateTime(2020, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("APBDKol2.Models.Event", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdEvent");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            IdEvent = 1,
                            EndDate = new DateTime(2019, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Opener",
                            StartDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdEvent = 2,
                            EndDate = new DateTime(2020, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Woodstock",
                            StartDate = new DateTime(2020, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("APBDKol2.Models.EventOrganiser", b =>
                {
                    b.Property<int>("IdOrganiser")
                        .HasColumnType("int");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int");

                    b.HasKey("IdOrganiser");

                    b.HasIndex("IdEvent");

                    b.ToTable("EventOrganiser");

                    b.HasData(
                        new
                        {
                            IdOrganiser = 1,
                            IdEvent = 1
                        },
                        new
                        {
                            IdOrganiser = 2,
                            IdEvent = 2
                        });
                });

            modelBuilder.Entity("APBDKol2.Models.Organiser", b =>
                {
                    b.Property<int>("IdOrganiser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdOrganiser");

                    b.ToTable("Organiser");

                    b.HasData(
                        new
                        {
                            IdOrganiser = 1,
                            Name = "art"
                        },
                        new
                        {
                            IdOrganiser = 2,
                            Name = "rmf"
                        });
                });

            modelBuilder.Entity("APBDKol2.Models.ArtistEvent", b =>
                {
                    b.HasOne("APBDKol2.Models.Artist", "Artist")
                        .WithMany("ArtistEvents")
                        .HasForeignKey("IdArtist")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBDKol2.Models.Event", "Event")
                        .WithMany("ArtistEvents")
                        .HasForeignKey("IdEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APBDKol2.Models.EventOrganiser", b =>
                {
                    b.HasOne("APBDKol2.Models.Event", "Event")
                        .WithMany("EventOrganisers")
                        .HasForeignKey("IdEvent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APBDKol2.Models.Organiser", "Organiser")
                        .WithMany("EventOrganisers")
                        .HasForeignKey("IdOrganiser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
